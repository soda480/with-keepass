name: ci

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:
  schedule:
  - cron: "0 8 * * *"

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: install dependencies
        run: python -m pip install -e .[dev]

      - name: lint source code 
        run: python -m flake8 -v with_keepass/ --max-line-length 100 --ignore=E302,E305

      - name: run unit tests
        run: python -m unittest discover tests/ -v

      - name: compute code coverage
        run: |
          python -m coverage run -m unittest discover tests/
          python -m coverage report
          python -m coverage html
          python -m coverage xml

      - name: upload coverage artifacts
        if: ${{ matrix.python_version == '3.12' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage_html/
            coverage.xml

      - name: run bandit scan
        run: python -m bandit -r with_keepass/ --skip B606

  publish-to-pypi-and-github-release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags')"
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: install requirements
        run: python -m pip install --upgrade setuptools build twine

      - name: build package
        run: python -m build .

      - name: upload to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*

      - name: create github release
        uses: softprops/action-gh-release@v1